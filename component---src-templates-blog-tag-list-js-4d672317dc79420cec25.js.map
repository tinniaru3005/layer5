{"version":3,"file":"component---src-templates-blog-tag-list-js-4d672317dc79420cec25.js","mappings":"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","sources":["webpack://Layer5/./src/sections/Blog/Blog-list/blogList.style.js","webpack://Layer5/./src/sections/Blog/Blog-list/index.js","webpack://Layer5/./src/templates/blog-tag-list.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const BlogPageWrapper = styled.div`\n\t.blog-list-wrapper {\n\t\tmargin-bottom: 5rem;\n\t}\n\n\t.blog-lists{\n\t\tmargin-top: 5rem;\n\t\t\n\t}\n\t.post-block{\n\t\tbackground-color: ${props => props.theme.DarkTheme ? \"#212121\" : \"#FFFFFF\"};\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\t\n\t\t\n\t}\n\t.blog-lists{\n\t\tmargin-top: 5rem;\n\t}\n\t.post-thumb-block{\n\t\theight: 8rem;\n\t\twidth: 25%;\n\t\timg{\n\t\t\tpadding: 0px;\n\t\t\tmargin: 0px;\n\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t}\n\t}\n\n\t.post-content-block{\n\t\theight: 8.5rem;\n\t\twidth: 75%;\n\t}\n\n\t.post-title{\n\t\tfont-size: 1.5rem;\n\t}\n\n\t.post-meta-block{\n\t\tflex-direction: row-reverse;\n\t\tp{\n\t\t\tfont-size: 1rem;\n\t\t\ttext-align: end;\n\t\t}\n\t\t.author{\n\t\t\tfont-size: 1rem;\n\t\t\ttext-align: start;\n\t\t\tmargin-bottom:0;\n\t\t}\n\t}\n\n\t@media screen and (max-width:1200px){\n\t\t.post-block{\n\t\t\theight: auto;\n\t\t}\n\t\t.post-thumb-block{\n\t\t\theight: 8rem;\n\t\n\t\t\timg{\n\t\t\t\twidth: 100%;\n\t\t\theight: 100%;\n\t\t\t}\n\t\t}\n\t}\n\n\t@media screen and (max-width:992px){\n\t\t.post-block{\n\t\t\theight: 10rem;\n\t\t}\n\t\t.post-thumb-block{\n\t\t\theight: 15rem;\n\t\n\t\t\timg{\n\t\t\t\tmax-height:15rem;\n\t\t\t}\n\t\t}\n\t}\n\n\t@media screen and (max-width:500px){\n\t\t.post-block{\n\t\t\theight: 9rem;\n\t\t}\n\t\t.blog-list-wrapper{\n\t\t\tmargin: 0rem auto 5rem;\n\t\t}\n\t\t.blog-lists{\n\t\t\tmargin-top: 0rem;\n\t\t}\n\t\t.post-content-block{\n\t\t\theight: fit-content;\n\t\t}\n\t}\n\n\t@media only screen and (min-width: 575px) {\n    .tooltip-search {\n      margin-bottom: 0;\n    }\n  }\n  @media only screen and (min-width: 990px) {\n    .tooltip-search {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport BlogViewToolTip from \"../../../components/blog-view-tooltip\";\nimport { Container, Row, Col } from \"../../../reusecore/Layout\";\nimport PageHeader from \"../../../reusecore/PageHeader\";\nimport Sidebar from \"../Blog-sidebar\";\nimport Card from \"../../../components/Card\";\nimport { BlogPageWrapper } from \"./blogList.style\";\nimport RssFeedIcon from \"../../../assets/images/socialIcons/rss-sign.svg\";\nimport Pagination from \"../../Resources/Resources-grid/paginate\";\nimport SearchBox from \"../../../reusecore/Search\";\nimport useDataList from \"../../../utils/usedataList\";\n\nconst BlogList = ({\n  isListView,\n  setListView,\n  setGridView,\n  pageContext,\n  data,\n  theme\n}) => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  let { totalCount, nodes } = data.allMdx;\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const { queryResults, searchData } = useDataList(\n    nodes,\n    setSearchQuery,\n    searchQuery,\n    [\"frontmatter\", \"title\"],\n    \"id\"\n  );\n  const category = pageContext.category ? pageContext.category : null;\n  const tag = pageContext.tag ? pageContext.tag : null;\n  const currentPosts = queryResults.slice(indexOfFirstPost, indexOfLastPost);\n  totalCount = queryResults.length;\n  const header = tag\n    ? `${totalCount} post${totalCount === 1 ? \"\" : \"s\"} tagged with \"${tag}\"`\n    : category\n      ? `${totalCount} post${\n        totalCount === 1 ? \"\" : \"s\"\n      } categorized as \"${category}\"`\n      : \"Blog\";\n\n  // Change page\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <BlogPageWrapper>\n      <PageHeader\n        title={header}\n        path=\"Blog\"\n        img={RssFeedIcon}\n        feedlink=\"/blog/feed.xml\"\n      />\n      <div className=\"blog-list-wrapper\">\n        <Container>\n          <Row>\n            <Col sm={12} md={8}>\n              {!pageContext.tag && !pageContext.category ? (\n                <div className=\"tooltip-search\">\n                  <BlogViewToolTip\n                    isListView={isListView}\n                    setListView={setListView}\n                    setGridView={setGridView}\n                  />\n                  <SearchBox\n                    searchQuery={searchQuery}\n                    searchData={searchData}\n                    paginate={paginate} currentPage={currentPage}\n                  />\n                </div>\n              ) : (\n                <SearchBox searchQuery={searchQuery} searchData={searchData} paginate={paginate} currentPage={currentPage} />\n              )}\n              <Row className=\"blog-lists\">\n                {currentPosts.length > 0 &&\n                  currentPosts.map(({ id, frontmatter, fields }) => (\n                    <Col xs={12} key={id}>\n                      <Card theme={theme} frontmatter={frontmatter} fields={fields} />\n                    </Col>\n                  ))}\n                <Col>\n                  {currentPosts.length > 0 && (\n                    <Pagination\n                      postsPerPage={postsPerPage}\n                      totalPosts={queryResults.length}\n                      currentPage={currentPage}\n                      paginate={paginate}\n                    />\n                  )}\n                </Col>\n              </Row>\n            </Col>\n            <Col sm={12} md={4}>\n              <Sidebar pageContext={pageContext} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </BlogPageWrapper>\n  );\n};\n\nexport default BlogList;\n","import React, { useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nimport Navigation from \"../sections/General/Navigation\";\nimport BlogList from \"../sections/Blog/Blog-list\";\nimport Footer from \"../sections/General/Footer\";\n\nimport { GlobalStyle } from \"../sections/app.style\";\n\nimport { graphql } from \"gatsby\";\nimport { darktheme } from \"../theme/app/themeStyles\";\nimport lighttheme from \"../theme/app/themeStyles\";\n\nexport const query = graphql`query BlogsByTags($tag: String!) {\n  allMdx(\n    sort: {fields: [frontmatter___date], order: DESC}\n    filter: {fields: {collection: {eq: \"blog\"}}, frontmatter: {tags: {in: [$tag]}, published: {eq: true}}}\n  ) {\n    totalCount\n    nodes {\n      id\n      body\n      frontmatter {\n        title\n        subtitle\n        date(formatString: \"MMMM Do, YYYY\")\n        author\n        thumbnail {\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH)\n          }\n          extension\n          publicURL\n        }\n      }\n      fields {\n        slug\n      }\n    }\n  }\n}\n`;\n\nconst BlogListPage = ({ pageContext, data }) => {\n  const [theme, setTheme] = useState();\n  const themeSetter = (thememode) => {\n    setTheme(thememode);\n  };\n\n  return (\n    <ThemeProvider theme={theme === \"dark\" ? darktheme : lighttheme}>\n      <Layout>\n        <GlobalStyle />\n        <Navigation theme={theme} themeSetter={themeSetter} />\n        <BlogList data={data} pageContext={pageContext} />\n        <Footer />\n      </Layout>\n    </ThemeProvider>\n  );\n};\nexport default BlogListPage;\n\nexport const Head = () => {\n  return  <SEO\n    title=\"Blog\"\n    description=\"The latest news and announcements about Layer5, our products, and our ecosystem, as well as voices from across our community.\"\n    canonical=\"https://layer5.io/blog\"\n  />;\n};"],"names":["BlogPageWrapper","styled","props","theme","DarkTheme","isListView","setListView","setGridView","pageContext","data","useState","currentPage","setCurrentPage","postsPerPage","indexOfLastPost","indexOfFirstPost","allMdx","totalCount","nodes","searchQuery","setSearchQuery","useDataList","queryResults","searchData","category","tag","currentPosts","slice","length","header","paginate","pageNumber","PageHeader","title","path","img","RssFeedIcon","feedlink","className","sm","md","Search","map","id","frontmatter","fields","xs","key","Card","totalPosts","setTheme","ThemeProvider","darktheme","lighttheme","themeSetter","thememode","Head","description","canonical"],"sourceRoot":""}