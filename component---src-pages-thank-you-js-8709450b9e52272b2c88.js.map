{"version":3,"file":"component---src-pages-thank-you-js-8709450b9e52272b2c88.js","mappings":"qRAgHA,EA9GyBA,EAAAA,QAAAA,IAAAA,WAAU,4EAAVA,CAAU,+1EACZ,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,mBAAmB,IAW/C,SAAAF,GAAK,OAAIA,EAAMC,MAAME,cAAc,IAevB,SAAAH,GAAK,OAAIA,EAAMC,MAAME,cAAc,ICd/D,EAXwB,WACtB,OACE,gBAAC,EAAe,KACd,uBAAKC,UAAU,cACb,0BAAI,+BAEN,gBAAC,IAAmB,MAG1B,ECeA,EAjBwB,WACtB,OAA0BC,EAAAA,EAAAA,YAAnBJ,EAAK,KAAEK,EAAQ,KAKtB,OACE,gBAAC,EAAAC,cAAa,CAACN,MAAiB,SAAVA,EAAmBO,EAAAA,EAAYC,EAAAA,GACnD,gBAAC,IAAM,KACL,gBAAC,IAAW,MACZ,gBAACC,EAAA,EAAU,CAACT,MAAOA,EAAOU,YARZ,SAACC,GACnBN,EAASM,EACX,IAOM,gBAAC,EAAQ,MACT,gBAACC,EAAA,QAAM,OAIf,EAGaC,EAAO,WAClB,OAAO,gBAAC,IAAG,CAACC,MAAM,0BAA0BC,YAAY,+BAC1D,C,mFCxBMC,EAA6BlB,EAAAA,QAAAA,IAAAA,WAAU,8FAAVA,CAAU,6rBACtB,SAAAC,GAAK,OAAIA,EAAMC,MAAMiB,UAAY,kBAAoB,oBAAoB,IAEjE,SAAAlB,GAAK,OAAIA,EAAMC,MAAMiB,UAAY,yBAA2B,kBAAkB,IAiD7G,IAlB4B,WAC1B,OACE,gBAACD,EAA0B,KACzB,gBAAC,KAAS,KACR,gBAAC,KAAG,CAACb,UAAU,kBAAkBe,SAAO,GACtC,gBAAC,KAAG,CAACf,UAAU,UAAUgB,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC1C,0BAAI,+CACJ,gBAAC,UAAM,CAACC,WAAS,EAACR,MAAM,cAAcS,IAAI,8BAE5C,gBAAC,KAAG,CAACpB,UAAU,QAAQgB,GAAI,GAAIC,GAAI,EAAGC,GAAI,GACxC,gBAAC,EAAAG,EAAW,CAACC,IA9CA,qBA8CuBC,IAAI,4BAA4BC,UAAU,UAAS,0BAMnG,C","sources":["webpack://Layer5/./src/sections/thank-you/thank-you.style.js","webpack://Layer5/./src/sections/thank-you/thank-you.js","webpack://Layer5/./src/pages/thank-you.js","webpack://Layer5/./src/sections/Learn/Learn-Service-Mesh-CTA/index.js"],"sourcesContent":["import styled from \"styled-components\";\n\nconst SubscribeWrapper = styled.div`\n    background-color:${props => props.theme.secondaryLightColor};\n    padding: 3.125rem 0.625rem;\n    overflow: hidden;\n    h1{\n        font-weight: 600;\n        font-size:2.875rem;\n        margin:1.25rem 0;\n        width: 100%;\n        text-align: center;\n    }\n    h2 span{\n        color:${props => props.theme.secondaryColor};\n    }\n    \n    input{\n        display: block;\n        padding: 0.9375rem;\n        width: 90%;\n        height: 3rem;\n        font-size: 1rem;\n        border-radius: 5px;\n        box-shadow: none;\n        transition: 450ms all;\n        border: 1px solid #000;\n        margin:1.5625rem;\n        &:hover,&:focus{\n            border-color: ${props => props.theme.secondaryColor};\n        }\n        \n    }\n    #mc-embedded-subscribe{\n        margin: 1.5rem 0.3125rem 0;\n    }\n    #mc-embedded-subscribe:hover{\n        color:black;\n        box-shadow:0 2px 10px rgba(0,0,0,0.4);\n    }\n    @media only screen and (max-width: 1050px) {\n        .email-cont{\n            justify-content:center;\n            display:flex;\n        }\n\n    }\n    @media only screen and (max-width: 912px) {\n        form{\n            padding:0 1.875rem;\n            h2{\n                font-size:1.75rem;\n                margin: 1.5625rem 0;\n            }\n            input{\n                width:90%;\n                height: 3.125rem;\n            }\n        }\n        .email-cont{\n            justify-content:center;\n            display:flex;\n        }\n\n\n    }\n    @media only screen and (max-width: 568px) {\n        form{\n            \n            input{\n                width: 90%;\n                margin-bottom: 30px;\n                height: 3.125rem;\n            }\n        }\n        .email-cont{\n            justify-content:center;\n            display:flex;\n        }\n    }\n    @media only screen and (max-width: 480px) {\n        form{\n            \n            input{\n                width: 90%;\n            }\n        }\n        .email-cont{\n            display:flex;\n            justify-content:center;\n            \n        }\n    }\n    @media only screen and (min-width:768px) and (max-width:800px)\n    {\n        #mce-EMAIL{\n            margin:1.5625rem 0;\n            width:100%;\n        }\n        .email-cont div{\n            padding:0;\n        }\n\n    }\n    @media only screen and (max-width:500px){\n        #mce-EMAIL{\n            margin:1.5625rem 0;\n            width:100%;\n        }\n    }\n`;\n\nexport default SubscribeWrapper;\n","import React from \"react\";\nimport LearnServiceMeshCTA from \"../Learn/Learn-Service-Mesh-CTA\";\nimport ThankYouWrapper from \"./thank-you.style\";\n\nconst ThankYouSection = () => {\n  return (\n    <ThankYouWrapper>\n      <div className=\"parentcard\">\n        <h1>Thank you for subscribing!</h1>\n      </div>\n      <LearnServiceMeshCTA />\n    </ThankYouWrapper>\n  );\n};\n\nexport default ThankYouSection;\n","import React, { useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { GlobalStyle } from \"../sections/app.style\";\nimport { darktheme } from \"../theme/app/themeStyles\";\nimport lighttheme from \"../theme/app/themeStyles\";\nimport SEO from \"../components/seo\";\nimport Navigation from \"../sections/General/Navigation\";\nimport Footer from \"../sections/General/Footer\";\nimport Layout from \"../components/layout\";\nimport ThankYou from \"../sections/thank-you/thank-you\";\n\nconst ThankYouSection = () => {\n  const [theme, setTheme] = useState();\n  const themeSetter = (thememode) => {\n    setTheme(thememode);\n  };\n\n  return (\n    <ThemeProvider theme={theme === \"dark\" ? darktheme : lighttheme}>\n      <Layout>\n        <GlobalStyle />\n        <Navigation theme={theme} themeSetter={themeSetter} />\n        <ThankYou />\n        <Footer />\n      </Layout>\n    </ThemeProvider>\n  );\n};\nexport default ThankYouSection;\n\nexport const Head = () => {\n  return <SEO title=\"Service Mesh Newsletter\" description=\"The Service Mesh Newsletter\" />;\n};","import React from \"react\";\nimport styled from \"styled-components\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { Col, Container, Row } from \"../../../reusecore/Layout\";\nimport Button from \"../../../reusecore/Button\";\n\nconst ServiceMeshImage = \"./service-mesh.svg\";\n\nconst LearnServiceMeshCTAWrapper = styled.div`\n    background-color:${props => props.theme.DarkTheme ? \"rgb(20, 20, 20)\" : \"rgb(250, 250, 250)\"};\n    Button:hover {\n      box-shadow: 0 2px 10px ${props => props.theme.DarkTheme ? \"rgb(255 255 255 / 40%)\" : \"rgb(0 0 0 / 40%)\"};\n    }\n    padding: 5rem 0;\n    margin-top: 2rem;\n    \n    .section-wrapper{\n      @media (max-width: 767px){\n          flex-direction: column-reverse;\n          margin-top: -6rem;\n      }\n      .content{\n          @media (max-width: 767px){\n            text-align: center;\n          }\n          h2{\n            margin-bottom: 2rem;\n            font-weight: 700;\n        }\n      }\n      .image{\n        @media (max-width: 767px){\n          margin-bottom: 2rem;\n          display: flex;\n          justify-content: center;\n        }\n      img{\n        max-height: 16rem; \n      }\n    }\n`;\n\nconst LearnServiceMeshCTA = () => {\n  return (\n    <LearnServiceMeshCTAWrapper>\n      <Container>\n        <Row className=\"section-wrapper\" Vcenter>\n          <Col className=\"content\" sm={12} md={6} lg={6}>\n            <h2>Learn to service mesh with interactive labs</h2>\n            <Button secondary title=\"Let's Learn\" url=\"/learn/service-mesh-labs\" />\n          </Col>\n          <Col className=\"image\" sm={12} md={6} lg={6}>\n            <StaticImage src={ServiceMeshImage} alt=\"Learn how to Service Mesh\" objectFit=\"contain\" />\n          </Col>\n        </Row>\n      </Container>\n    </LearnServiceMeshCTAWrapper>\n  );\n};\n\nexport default LearnServiceMeshCTA;\n"],"names":["styled","props","theme","secondaryLightColor","secondaryColor","className","useState","setTheme","ThemeProvider","darktheme","lighttheme","Navigation","themeSetter","thememode","Footer","Head","title","description","LearnServiceMeshCTAWrapper","DarkTheme","Vcenter","sm","md","lg","secondary","url","S","src","alt","objectFit"],"sourceRoot":""}